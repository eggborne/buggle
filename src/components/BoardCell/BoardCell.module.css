.BoardCell {
  --face-size: 95%;
  scale: var(--cube-scale);
  position: relative;
  aspect-ratio: 1;
  background-color: var(--cube-color, #e0d0c0);
  border-radius: var(--cube-roundness, 0.5rem);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  color: var(--cube-text-color, #333);
  outline: 1px solid #00000055;
  opacity: 0.8;
  box-shadow:
    inset -0.2rem -0.2rem 0.5rem rgba(0, 0, 0, 0.2),
    inset 0.2rem 0.2rem 0.5rem rgba(255, 255, 255, 0.2);
  transition: transform 200ms ease;
  box-sizing: padding-box;
}

.BoardCell::before {
  content: '';
  position: absolute;
  width: var(--face-size);
  height: var(--face-size);
  background-color: var(--cube-color);
  border-radius: 50%;
  box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.1);
  z-index: -1;
}

.BoardCell::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: #88008822;
  border-radius: inherit;
  transition: opacity 150ms ease;
  opacity: 0;
  z-index: 0;
}

.BoardCell p {
  z-index: 2;
  text-transform: capitalize;
}

.BoardCell.touched {
  transform: scale(95%);
  opacity: 1;
}

.BoardCell.touched.valid::after {
  opacity: 0.25;
  background-color: var(--valid-color);
}

.BoardCell.touched.special::after {
  opacity: 0.25;
  background-color: var(--special-color);
}

.BoardCell.touched.duplicate::after {
  opacity: 0.25;
  background-color: var(--duplicate-color);
}

.BoardCell.touched.opponentFound {
  border-color: var(--opponent-found-color);
}

.BoardCell.touched.redeemable {
  border-color: var(--redeemable-color);
}

.BoardCell.opponentTouching::after {
  opacity: 1;
}