.gameArea {
  justify-self: center;
  display: grid;
  grid-template-rows: auto auto;
  place-items: center;
}

.gameBoard {
  position: relative;
  width: var(--game-board-size);
  height: min-content;
  min-height: var(--game-board-size);
  border-radius: 0.25rem;
  align-self: start;
  display: grid;
  background-color: var(--game-board-background-color);
  outline: var(--board-outline-width) solid var(--game-board-background-color);
  box-shadow: 0 0 0.75rem var(--board-outline-width) #00000099;
  scale: 0.5;
  opacity: 0;
  transform: scale(1);
  transition: scale 600ms linear, opacity 600ms linear;
  transition-delay: 200ms;
  animation: bounce-out 300ms 600ms linear, bounce-in 150ms 900ms linear;
  position: relative;
  /* margin: var(--board-outline-width) 0; */
}

.gameBoard.showing {
  scale: 1;
  opacity: 1;
}

.waitingPlaceholder {
  position: absolute;
  translate: -50% -50%;
  top: 50%;
  left: 50%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 5rem;
}

.waitingPlaceholder > p {
  font-size: 1.1rem;
  position: absolute;
  bottom: 6rem;
}

.boardContainer {
  flex-grow: 1;
}

.pathOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  opacity: 0;
  stroke-linecap: round;
  stroke-linejoin: round;
  user-select: none;
  filter: drop-shadow(0 0 1px black);
  /* filter: url(#lineShadow); */
  transition: opacity 60ms ease;
}

.pathOverlay.visible {
  opacity: 1;
}

.pathSegment {
  fill: none;
  /* transition: stroke 60ms ease; */
}

/* .animatedSegment {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  animation: drawLine 200ms ease-in-out forwards;
} */

.pathSegment.outerLine {
  stroke: #ffaaaa;
}

@keyframes drawLine {
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes bounce-out {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes bounce-in {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.95);
  }

  100% {
    transform: scale(1);
  }
}

.pathOverlay.valid .pathSegment.outerLine {
  stroke: var(--valid-color);
}
.pathOverlay.special .pathSegment.outerLine {
  stroke: var(--special-color);
}

.pathOverlay.duplicate .pathSegment.outerLine {
  stroke: #a1bd04;
}

.pathOverlay.opponentFound .pathSegment.outerLine {
  stroke: var(--opponent-found-color);
}

.pathOverlay.redeemable .pathSegment.outerLine {
  stroke: var(--redeemable-color);
}

.CloseModal {
  height: unset;
  background-color: rgb(56, 119, 42);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  gap: 2rem;
  padding:2rem;
}

.CloseModal > h1 {
  font-size: 2.25rem;
}

.CloseModal > .resultsBody {
  font-size: 1.25rem;
  text-shadow: var(--text-stroke);
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  
}

.CloseModal button {
  font-size: 1.5rem;
  padding: 1rem;
  width: 12rem;
}

.BeeSwarm {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--game-board-size);
  height: var(--game-board-size);
  z-index: 100;
  pointer-events: none;
  border: 4px solid red;
}

.EffectTimer {
  position: absolute;
  translate: -50% -50%;
  left: 50%;
  top: 40%;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: 0 50% 50% 50%;
  background: #ff000066;
  font-weight: bold;
  z-index: 0;
}

.EffectTimer.opponent {
  border-radius: 50% 0 50% 50%;
}

.ScoreFlair {
  position: absolute;
  translate: -50% 0;
  left: calc(var(--header-height) / 2);
  top: 0;
  font-size: 2rem;
  color: green;
  text-shadow: var(--text-stroke);
}