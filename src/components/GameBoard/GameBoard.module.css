.gameBoard {
  position: relative;
  width: var(--game-board-size);
  height: min-content;
  min-height: var(--game-board-size);
  border-radius: 0.25rem;
  display: grid;
  /* place-items: stretch; */
  /* place-content: center; */
  background-color: var(--game-board-background-color);
  outline: clamp(
      1rem, 
      calc(((var(--main-width) - var(--game-board-size)) / 2) - 1rem), 
      (calc(var(--main-width) - var(--game-board-size)) / 8)
    ) solid var(--game-board-background-color)
  ;
  box-shadow: 0 0 0.75rem 0.75rem #000000aa;
  scale: 0.5;
  opacity: 0;
  transition: scale 600ms ease, opacity 600ms ease;
  transition-delay: 200ms;
  position: relative;
}

.gameBoard.showing {
  scale: 1;
  opacity: 1;
}

.gameArea {
  display: grid;
  grid-template-rows: auto 1fr auto;
  place-items: center;
  justify-content: center;
}

.boardContainer {
  flex-grow: 1;
}

.pathOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  filter: drop-shadow(0 0 1px black);
  z-index: 10;
  opacity: 0;
  stroke-linecap: round;
  stroke-linejoin: round;
  transition: opacity 100ms ease;
}

.pathOverlay.visible {
  opacity: 1;
}

.pathSegment {
  fill: none;
  stroke: #ffaaaa;
}

.animatedSegment {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  animation: drawLine 600ms ease forwards;
}

@keyframes drawLine {
  to {
    stroke-dashoffset: 0;
  }
}

.pathOverlay.valid .pathSegment {
  stroke: var(--valid-color);
}

.pathOverlay.duplicate .pathSegment {
  stroke: #a1bd04;
}